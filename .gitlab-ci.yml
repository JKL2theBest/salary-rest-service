
stages:
  - lint
  - test
  - build
  - secret-detection

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

variables:

  POETRY_IMAGE: "python:3.9"

  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

  SECRET_DETECTION_ENABLED: 'true'

linting:
  stage: lint
  image: $POETRY_IMAGE
  before_script:
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install --only dev
  script:
    - echo "Linting stage (placeholder)..."

testing:
  stage: test
  image: $POETRY_IMAGE
  before_script:
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install
  script:
    - poetry run pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

sast:
  stage: test

secret_detection:
  stage: secret-detection

build_docker_image:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:

    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:

    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE